<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[微信公众号开发]]></title>
    <url>%2F2019%2Fwxkf%2F</url>
    <content type="text"><![CDATA[验证开发者服务器1.微信服务器将发送GET请求到填写的服务器地址URL上 2.获取微信服务器Get请求的参数 signature、timestamp、nonce、echostr 3.将token、timestamp、nonce三个参数进行字典序排序 4.将三个参数字符串拼接成一个字符串进行sha1加密 5.开发者获得加密后的字符串可与signature对比，标识该请求来源于微信 6.验证URL有效性成功后即接入生效，成为开发者。申请测试账号，成为开发者后，用户每次向公众号发送消息、或者产生自定义菜单、或产生微信支付订单等情况时，开发者填写的服务器配置URL将得到微信服务器推送过来的消息和事件，开发者可以依据自身业务逻辑进行响应 7.根据appID 和 appSecret 获取开发者access_token(有效期7200) 使用微信内置API1.根据access_token 获取jsapi_ticket(有效期7200) 2.根据jsapi_ticket 生成 微信加密签名 3.根据签名、APPID、生成签名的时间戳、生成签名的随机串 可以使用微信JSSDK 使用公众号功能1.根据access_token 设置公众号测试号的自定义菜单,收发消息 获取用户信息1.根据开发者填写的服务器配置URL、APPID向用户发起页面跳转授权 2.授权成功之后跳转到应用首页，url携带code. 3.根据code、appID、appSecret、grant_type拿到access_token（授权token）和 openid 4.根据access_token（授权token）和 openid 获取用户信息]]></content>
      <categories>
        <category>wx</category>
      </categories>
      <tags>
        <tag>wx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[各种软件项目工具安装统计]]></title>
    <url>%2F2019%2Finstall%2F</url>
    <content type="text"><![CDATA[安装node服务器 (官网下载msi无需配置环境变量)：安装express生成器 npm install -g express-generator （无法安装时用npm cache clean -f 清理缓存） 生成node项目目录 express myserver 安装 supervisor 热加载 运行 supervisor bin/www 安装mongodb数据库：配置mongodb环境变量 电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量 便于在任何地方都能启动mongodb 启动命令mongod –dbpath “d://mongodb//data” 浏览器同步测试工具 npm install -g browser-sync 安装vue-cli2：1 npm install -g vue-cli 2 vue init webpack name 安装vue-cli3：1 npm install -g @vue/cli 2 vue create name 查看一级npm 包 npm list –depth=0 用cli3安装cli2项目：1 npm install -g @vue/cli-init 2 vue init webpack name 其他：创建gitignore：Git Bash - touch .gitignore 移动端测试：关闭本机PC防火墙 –&gt; 访问本机ip + 端口 浏览器同步测试工具：npm install -g browser-sync Eclipse中svn设置提交时忽略某些文件夹和文件： 打开Window-&gt;Preferences-&gt;Team-&gt;Ignored Resources, 点击Add Pattern按钮，添加要忽略为文件或文件夹 比如：要忽略bin文件夹，则添加模式*/bin/*; 忽略.classpath文件，则添加模式*.classpath. Eclipse 全局查找：CTRL + H Webstorm 快捷设置： Webstorm 全局查找 CTRL + SHIFT + R 取消updating indices 右键文件，选择 Mark Directory as -&gt; Excluded(排除) 添加项目 Settings - Directories Tab快捷模板 Settings - Editor - Live Templates 关联git版本控制 Settings - Version Control - Git/SVN]]></content>
  </entry>
  <entry>
    <title><![CDATA[常见问题细节记录 - JS]]></title>
    <url>%2F2019%2Fstudy-js%2F</url>
    <content type="text"><![CDATA[循环一个数组并将内容赋给另一个数组时，要将另一个数组定义在循环之外，不然每次循环都会为原来的数组 将自己取反，赋值给自己，可以实现反选功能 循环时，先将所有的元素设为默认的样式，然后设置当前元素的样式 执行事件响应函数时，如果要取消某元素的默认行为，例如a的跳转，直接return false即可 绑定多个事件兼容方式： chrome firefox ：addEventListener(element,onclick,callBack) 用addEventListener绑定函数时，取消默认行为的方法:event.preventDefault() IE ：attachEvent(elememt,click,function(){callBack.call(element)}） attachEvent绑定的事件响应函数中this永远是window 新建元素与原来元素不在同一作用域内，需要单独绑定事件 可使用冒泡解决，给document绑定事件，判断event.target.nodeName.toLowerCase()为触发元素时触发 return返回函数的执行结果给调用对象 为了防止函数执行时使用变量的值，可在内部加上一个返回函数，防止变量提前赋值，此时变量为内部函数变量，外部函数不可访问(闭包的功效) js读取的style都是内联样式,但是js可以设置样式 IE如何读取外部样式:元素.currentStyle.样式名 其他浏览器:getComputedStyle(元素名,伪类null).样式名;(如果说不需要指定伪类可以不传也可以传个null) 兼容ie和其他浏览器 var style=box1.currentStyle.样式名 || getComputedStyle(box1).样式名; getComputedStyle(box1)放在||后面，因为IE不支持此方法会报错 滚动条滚动事件onscroll 当滚动条滚动到最下边时会满足如下公式：scrollHeight - scrollTop = clientHeight 整个滚动区域的高度 - 滚动条的滚动高度 = 可见元素高度 滚动条滚动高度获取：兼容性： ie firefox: document.documentElement.scrollTop; chrome : document.body.scrollTop; event(window触发事件时传递的参数)（包含各种事件的信息，如光标移动的坐标event.clientX，event.clientY 触发的元素event.target） 阻止事件冒泡: 获取event 兼容方式event=event||window.event(IE的event在window中) 给event设置属性 兼容方式: if(stopPropagation){event.stopPropagation()(兼容老版chrome，firefox，IE8以上支持)} else{event.cancelBubble=true} defaultValue表示的是文本框的默认value属性值 this: 1.以fun()的形式调用,this为window 2.以obj.fun()的形式调用,this为obj 3.以构造函数var sfun=new fun()的形式调用,this为构造函数新建的对象 4.以fun.call(arguments)和fun.apply(arguments)的形式调用,this为arguments 调用fun.call()和fun.apply()等于调用fun(),不同的是可以指定this,call的参数可以直接写, 而apply的参数需用[]包含,apply(obj,[arguments]) 鼠标滚动事件: 兼容方式: IE,chrome:onmousewheel事件 滚动触发event.wheelDelta属性，为正往上 为负往下 firefox:DOMMouseScroll事件,但是需要addEventListener来绑定事件 触发ev.detail 为正往下 为负往上 鼠标拖拽事件：onmousedown onmousemove onmouseup 取消拖拽时，触发其他元素的拖拽行为：兼容方式： chrome，firefox：return false ie：onmousedown设置拖拽捕获事件try{ element.setCapture }catch(e){ } onmouseup设置取消捕获事件try{ element.releaseCapture（） }catch(e){ } 在IE中当为一个元素设置setCapture(),元素会捕获页面中的所有的事件,其他元素的事件就不会触发了 键盘按下事件：onkeydown (一般给input绑定或document绑定) input内容是在onkeydown结束以后出来 event.keyCode获取键盘按键的编码，将编码转化成字符String.fromCharCode(ev.keyCode) 鼠标右键事件：oncontextmenu 取消右键默认事件，return false 判断当前浏览器browser类型： var ua=window.navigator.userAgent if(/firefox/i.test(ua)){ }else if(/chrome/i.test(ua)){ }else if(&quot;ActiveXObject&quot; in window){ ie } 浏览器窗口调整事件：onresize 动态获取属性：[attr] if判断中，使用=== 表单输入事件：oninput]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见问题细节记录 - CSS]]></title>
    <url>%2F2019%2Fstudy_css%2F</url>
    <content type="text"><![CDATA[visibility(能见度)【visitility/hidden】：隐藏元素，但是占据原来的位置；display(显示)【block/inline/none】:隐藏元素，不占据原来的位置 多个inline或inline-block标签换行写时之间会默认边距，设置flaot浮动 chrome最小字体设置：-webkit-transform-origin-x:0;-webkit-transform:scale(size/12) 图片垂直居中：vertical-align:middle;line-height=height ie6不支持 当父元素设置table-cell时，如果不设置vertical-align: middle，会让子元素font下沉 js替换元素的类名classList.toggle 解决a标签之间的间距问题： 1 设置父元素letter-spacing: -999px 设置a标签letter-spacing: 0 2 设置父元素font-size:0; 重新设置a标签的fon-size 3 设置a标签浮动 4 设置a标签在一行 父级元素如果有transform属性，会导致子元素的fixed失效 touchmove中preventDefault导致无法上下滑动 touchmove元素导致触发touchend事件 外边距溢出: 1 给父元素设置边框 2 隐藏溢出 overflow:hidden]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IE兼容性]]></title>
    <url>%2F2018%2Fie%2F</url>
    <content type="text"><![CDATA[IE input readonly 失效： 设置unselectable属性为on IE8 input padding-left 失效 IE8 input placeholder 失效 IE8 背景色渐变 背景透明度 rgba及opacity 字体渐变 IE8 不支持background简写 IE6/7设置absolute偏移量不对 left top值不可省略]]></content>
      <categories>
        <category>ie</category>
      </categories>
      <tags>
        <tag>ie</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo常用命令及迁移]]></title>
    <url>%2F2018%2Fhexo%2F</url>
    <content type="text"><![CDATA[hexo常用命令hexo g == hexo generate #生成 hexo s == hexo server #启动服务预览 hexo d == hexo deploy #部署 hexo new &quot;postName&quot; #新建文章 hexo new page &quot;pageName&quot; #新建页面 hexo迁移参考]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[伪类和伪元素]]></title>
    <url>%2F2018%2Fcae%2F</url>
    <content type="text"><![CDATA[伪类用于向某些选择器添加特殊的效果；伪元素用于将特殊的效果添加到某些选择器。 伪类有：:first-child ，:link:，visited，:hover，:active，:focus，:lang 伪元素有：:first-line，:first-letter，:before，:after 使用伪类： &lt;style&gt; p&gt;i:first-child {color: red} &lt;/style&gt; &lt;p&gt; &lt;i&gt;first&lt;/i&gt; &lt;i&gt;second&lt;/i&gt; &lt;/p&gt; 如果我们不使用伪类，而希望达到上述效果，可以这样做： 不使用伪类： &lt;style&gt; .first-child {color: red} &lt;/style&gt; &lt;p&gt; &lt;i class=&quot;first-child&quot;&gt;first&lt;/i&gt; &lt;i&gt;second&lt;/i&gt; &lt;/p&gt; 即我们给第一个子元素添加一个类，然后定义这个类的样式。 使用为元素： &lt;style&gt; p:first-letter {color: red} &lt;/style&gt; &lt;p&gt;I am stephen lee.&lt;/p&gt; 那么如果我们不使用伪元素，要达到上述效果，应该怎么做呢？ 不使用为元素： &lt;style&gt; .first-letter {color: red} &lt;/style&gt; &lt;p&gt;&lt;span class=&apos;first-letter&apos;&gt;I&lt;/span&gt; am stephen lee.&lt;/p&gt; 即我们给第一个字母添加一个 span，然后给 span 增加样式。 两者的区别已经出来了。那就是： 伪类的效果可以通过添加一个实际的类来达到，而伪元素的效果则需要通过添加一个实际的元素才能达到，这也是为什么他们一个称为伪类，一个称为伪元素的原因。 伪元素和伪类之所以这么容易混淆，是因为他们的效果类似而且写法相仿，但实际上 css3 为了区分两者，已经明确规定了伪类用一个冒号来表示，而伪元素则用两个冒号来表示。 :Pseudo-classes //伪类 ::Pseudo-elements //伪元素 但因为兼容性的问题，所以现在大部分还是统一的单冒号，但是抛开兼容性的问题，我们在书写时应该尽可能养成好习惯，区分两者。]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git使用指南及注意事项]]></title>
    <url>%2F2017%2Fusegit%2F</url>
    <content type="text"><![CDATA[克隆远程仓库并上传code：1. github创建仓库，本地安装git命令行工具TortoiseGit，新建文件并打开，右键执行git clone url[仓库地址] 2. 使用SSH方式连接(若报错no supported authentication nethods available，提示身份验证) 解决方式：文件夹内右键选择TortoiseGit --&gt; Settings，在弹出的对话框中点击NetWork在右侧的区域配置 SSH Client项为Git安装目录下bin/ssh.exe文件 3. 添加code到本地仓库文件(工作区),右键执行git bash打开TortoiseGit --&gt; git add -A(暂存区) --&gt; git commit -m &quot;提交信息&quot;(版本区) --&gt; git push origin master(远程主分支)(若使用HTTPS方式会提示输 入github用户名密码，使用SSH方式并在配置SSH key时可不输入用户名密码，则无提示) --&gt; push成功 本地关联github仓库并上传code：1. 本地执行git init 初始化git仓库 2. 执行上面步骤3添加code 3. git remote add origin url(连接仓库地址) 4. 若github仓库有最新code则先执行git pull --rebase origin master(合并文件) 5. git push origin master(push成功) 配置SSH key1. TortoiseGit执行cd ~/. ssh 检查本机已存在的ssh密钥，如果提示：No such file or directory 说明没有配置key 2. ssh-keygen -t rsa -C &quot;github邮箱&quot; 3. 连续3次回车，中间会提示输入用户名密码(若输入，push提交的时候也得输入)，生成key文件 4. 打开用户目录C:\Users\Administrator\.ssh，找到id_rsa.pub(公钥)文件打开并复制 5. 打开github主页，进入setting --&gt; SSH and GPG keys --&gt; New SSH key 配置即可 6. ssh -T git@github.com检查配置是否成功(提示Hi yourname! You&apos;ve successfully authenticated, but GitHub does not provide shell access.则成功) 7. 若push的时候提示Could not read from remote repository.permission denied (publickey)需重新配置 注：使用其他工具push也会提示 关于删除：1. git add/commit之后删除工作区的文件(本地)，但暂存区/版本区并未删除，需执行(git rm 文件名) 命令， 可彻底删除 2. 误删：git checkout可恢复最新commit的版本 3. git rm -r 文件名： 删除本地文件(删除前备份)--&gt;git add--&gt;git commit--&gt;git push--&gt;删除github文件 关于分支：git checkout -b &lt;分支名&gt; 创建一个分支并切换--&gt;修改代码--&gt;git add *--&gt;git commit -m &quot;&quot;--&gt;git push origin &lt;分支名&gt;推送到远程仓库 注意：推送之前可删除 git branch -d 分支名(没有commit可用-d)(commit之后，没有合并之前用-D) (在其他分支下) 切换到主分支：git checkout master(切换之前必须commit) 将远程仓库分支更新到本地 ：git pull origin &lt;分支名&gt; （自动将更新合并） git fetch origin master:&lt;分支名&gt; 合并：git merge &lt;分支名&gt;–&gt;出现冲突 手动合并–&gt; 手动合并如下： &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD(合并分支区) ======= （合并分支区最后的内容） （被合并分支区内容） &gt;&gt;&gt;&gt;&gt;&gt;&gt; f(被合并分支区) 查看每次commit提交后版本信息：git log 退出：q 工作区某一个文件改动之后，又想回到之前的commit版本区，执行命令 git checkout &lt;文件名&gt; 工作区所有文件改动之后，又想回到之前的commit版本区，执行命令 git fetch origin git reset –hard origin/master 常用操作查看关联远程仓库地址： git remote -v 移除关联远程仓库地址： git remote rm origin (git remote add origin [url]添加) 修改关联远程仓库地址： git remote set-url origin [url] 查看Git代理设置： git config --global http.proxy 取消代理设置： git config --global --unset http.proxy 配置本地TortoiseGit git config --global user.name &quot;github用户名&quot; git config --global user.email &quot;github邮箱&quot; 其他操作查看状态：git status 查看日志：git log 查看配置：git config --list 撤销修改：git checkout -- file 删除文件：git rm file 添加记录：git add file 或 git add . 添加描述：git commit -m &quot;miao shu nei rong&quot; 同步数据：git pull 提交数据：git push origin name 查看分支：git branch 创建分支：git branch name 切换分支：git checkout name 创建+切换分支：git checkout -b name 合并某分支到当前分支：git merge name 删除分支：git branch -d name 删除远程分支：git push origin :name]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown]]></title>
    <url>%2F2017%2Fmarkdown%2F</url>
    <content type="text"><![CDATA[markdown常用语法总结 1.无序列表12345- 文本1- 文本1- 文本1* 文本2+ 文本3 文本1 文本1 文本1 文本2 文本3 2.有序列表1231. 文本12. 文本23. 文本3 文本1 文本2 文本3 3.多重列表123* 编程语言 * 脚本语言 * Python 编程语言 脚本语言 Python 4.单重引用1&gt; 一盏灯， 一片昏黄； 一简书， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。 一盏灯， 一片昏黄； 一简书， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。 5.多重引用12&gt;数据结构&gt; &gt;数据结构 数据结构 数据结构 6.换行1234&amp;ensp;&amp;ensp;半方大的空白或&amp;#8194;两个空格一个 回车换行&amp;emsp;&amp;emsp;全方大的空白或&amp;#8195;换行&lt;br/&gt;`&lt;br/&gt;`换行&amp;nbsp;&amp;nbsp;不断行的空白格或&amp;#160;不断行的空白格或 &ensp;&ensp;半方大的空白或&#8194;两个空格一个回车换行&emsp;&emsp;全方大的空白或&#8195;换行&lt;br/&gt;换行&nbsp;&nbsp;不断行的空白格或&#160;不断行的空白格或 7.代码格式化使用按键esc下方的反斜杠 1234567for (var i = 0; i &lt; this.circleData.length; i++) &#123; if (this.circleData[i].count) &#123; return true &#125; else &#123; return false &#125; &#125; 8.字体链接1[我的博客](http://blog.csdn.net &quot;悬停显示&quot;) 我的博客 9.关键字1`linux` linux 10.图片链接123456![baidu](http://www.baidu.com/img/bdlogo.gif &quot;百度logo&quot;) ![](https://github.com/tjjseven/mysite/raw/master/moblie/img/ym0.jpeg) [![baidu]](https://v.qq.com/x/2017/)[baidu]:http://www.baidu.com/img/bdlogo.gif &quot;百度Logo&quot; 11.分割线三个减号 12.回到顶部1[回到顶部](#配置SSH-key) 回到顶部 13.表格12345dog | bird | cat----|------|----foo | foo | foobar | bar | barbaz | baz | baz dog bird cat foo foo foo bar bar bar baz baz baz 14.多选框12- [ ] Android- [x] C# Android C# 15.diff12+ 鸟宿池边树，僧敲月下门- 鸟宿池边树，僧推月下门 16.提示框123456&#123;% note default %&#125; 提示框 &#123;% endnote %&#125;&#123;% note primary %&#125; 提示框 &#123;% endnote %&#125;&#123;% note success %&#125; 提示框 &#123;% endnote %&#125;&#123;% note info %&#125; 提示框 &#123;% endnote %&#125;&#123;% note warning %&#125; 提示框 &#123;% endnote %&#125;&#123;% note danger %&#125; 提示框 &#123;% endnote %&#125; 提示框 提示框 提示框 提示框 提示框 提示框 17.标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
